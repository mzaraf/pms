<<<<<<< HEAD
# Generated by Django 5.1.1 on 2024-09-24 09:25
=======
# Generated by Django 5.1.1 on 2024-09-24 09:44
>>>>>>> 5c79918 (changes on server)

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_fsm
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usertype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
<<<<<<< HEAD
                ('file_number', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
=======
                ('file_number', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
>>>>>>> 5c79918 (changes on server)
                ('designation', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_first_appointment', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_present_appointment', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_acting_appointment', models.DateField(blank=True, db_index=True, null=True)),
                ('phone', models.CharField(db_index=True, max_length=15, null=True, unique=True)),
                ('ippis_no', models.IntegerField(db_index=True, null=True, unique=True)),
                ('qualification', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('institution', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('qualification_award_date', models.DateField(blank=True, db_index=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.department')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_of_evaluation_from_date', models.DateField(blank=True, db_index=True, null=True)),
                ('period_of_evaluation_to_date', models.DateField(blank=True, db_index=True, null=True)),
                ('full_name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_first_appointment', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_present_appointment', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_acting_appointment', models.DateField(blank=True, db_index=True, null=True)),
<<<<<<< HEAD
                ('file_number', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
=======
                ('file_number', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
>>>>>>> 5c79918 (changes on server)
                ('ippis_no', models.IntegerField(db_index=True, null=True)),
                ('designation', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('qualification', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('institution', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('qualification_award_date', models.DateField(blank=True, db_index=True, null=True)),
                ('main_duties_performed_by_staff', models.TextField(blank=True, db_index=True, null=True)),
                ('joint_discussion_with_supervisor', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('staff_professionally_equipped', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('difficulties_achieving_target', models.TextField(blank=True, db_index=True, null=True)),
                ('method_by_supervisor_to_resolve_difficulties', models.TextField(blank=True, db_index=True, null=True)),
                ('target_review_with_supervisor', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('performance_measure_upto_standard_after_review', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('adhoc_duties_performed', models.TextField(blank=True, db_index=True, null=True)),
                ('adhoc_duties_impact_real_duties', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('main_duties_performed_by_staff_from_date', models.DateField(blank=True, db_index=True, null=True)),
                ('main_duties_performed_by_staff_to_date', models.DateField(blank=True, db_index=True, null=True)),
                ('cost_project_assignment_responsibility_allowances', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('project_assignment_responsibility_overhead_cost', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('project_assignment_responsibility_capital_cost', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('project_assigment_completion_time', models.CharField(blank=True, choices=[('DAILY', 'DAILY'), ('WEEKLY', 'WEEKLY'), ('MONTHLY', 'MONTHLY'), ('YEARLY', 'YEARLY')], db_index=True, max_length=50, null=True)),
                ('project_quantity_conformity_to_standard', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('project_quality_conformity_to_standard', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('reporting_officer', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('reporting_officer_from_date', models.DateField(blank=True, db_index=True, null=True)),
                ('reporting_officer_to_date', models.DateField(blank=True, db_index=True, null=True)),
                ('countersigning_officer', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('countersigning_officer_from_date', models.DateField(blank=True, db_index=True, null=True)),
                ('countersigning_officer_to_date', models.DateField(blank=True, db_index=True, null=True)),
                ('staff_evaluation_date_submitted', models.DateField(auto_now_add=True, db_index=True)),
                ('job_knowledge', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('quality_of_work', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('quantity_of_work', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('reliability', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('initiative_creativity', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('judgment', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('relationship_with_supervisor', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('working_with_others', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('relationship_with_subordinates', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('communication_skills', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('planning_and_organizing', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('directing_and_controlling', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('decision_making', models.IntegerField(blank=True, choices=[(16, '5 - Excellent'), (13, '4 - Outstanding'), (10, '3 - Satisfactory'), (7, '2 - Needs improvement'), (5, '1 - Unacceptable')], db_index=True, null=True)),
                ('commendation_for_outstanding_performance', models.IntegerField(blank=True, choices=[(2, 'yes'), (0, 'no')], db_index=True, null=True)),
                ('suggestions_that_contributed_to_changes', models.IntegerField(blank=True, choices=[(2, 'yes'), (0, 'no')], db_index=True, null=True)),
                ('appraisal_rating', models.FloatField(blank=True, db_index=True, null=True)),
                ('total_appraisal_rating', models.FloatField(blank=True, db_index=True, null=True)),
                ('details_of_commendation_for_outstanding_performance', models.TextField(blank=True, db_index=True, null=True)),
                ('sanction_discipline', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], db_index=True, max_length=50, null=True)),
                ('details_sanction_discipline', models.TextField(blank=True, db_index=True, null=True)),
                ('capacity_development_since_last_evaluation', models.TextField(blank=True, db_index=True, null=True)),
                ('accommplishments_since_last_evaluation', models.TextField(blank=True, db_index=True, null=True)),
                ('training_requirements_to_handle_responsibilities', models.TextField(blank=True, db_index=True, null=True)),
                ('skills_gap_requiring_improvement', models.TextField(blank=True, db_index=True, null=True)),
                ('missed_opportunities_reason', models.TextField(blank=True, db_index=True, null=True)),
<<<<<<< HEAD
                ('overall_performance_assessment', models.CharField(blank=True, choices=[('Outstanding', 'A - Outstanding'), ('Very Good', 'B - Very Good'), ('Good', 'C - Good'), ('fair', 'D - Fair'), ('Poor', 'E - Poor'), ('Very Poor', 'F - Very Poor')], db_index=True, max_length=50, null=True)),
                ('promotability', models.CharField(blank=True, choices=[('Outstanding', 'A - Outstanding'), ('Very Good', 'B - Very Good'), ('Good', 'C - Good'), ('fair', 'D - Fair'), ('Poor', 'E - Poor'), ('Very Poor', 'F - Very Poor')], db_index=True, max_length=50, null=True)),
=======
                ('overall_performance_assessment', models.CharField(blank=True, choices=[('Outstanding', 'A - Outstanding'), ('Very Good', 'B - Very Good'), ('Good', 'C - Good'), ('fair', 'D - Fair'), ('Poor', 'E - Poor'), ('Very Poor', 'F - Very Poor')], db_index=True, max_length=100, null=True)),
                ('promotability', models.CharField(blank=True, choices=[('Outstanding', 'A - Outstanding'), ('Very Good', 'B - Very Good'), ('Good', 'C - Good'), ('fair', 'D - Fair'), ('Poor', 'E - Poor'), ('Very Poor', 'F - Very Poor')], db_index=True, max_length=100, null=True)),
>>>>>>> 5c79918 (changes on server)
                ('supervisor_comments', models.TextField(blank=True, db_index=True, null=True)),
                ('supervisor_date_of_evaluation', models.DateField(blank=True, db_index=True, null=True)),
                ('head_of_department_comments', models.TextField(blank=True, db_index=True, max_length=255, null=True)),
                ('head_of_department_date_of_evaluation', models.DateField(blank=True, db_index=True, null=True)),
<<<<<<< HEAD
                ('appraisal_type', models.CharField(choices=[('staff', 'Staff'), ('supervisor', 'Supervisor')], max_length=50)),
=======
                ('appraisal_type', models.CharField(choices=[('staff', 'Staff'), ('supervisor', 'Supervisor')], max_length=20)),
>>>>>>> 5c79918 (changes on server)
                ('appraisal_status', django_fsm.FSMField(choices=[('initiated', 'Initiated'), ('supervisor_review', 'Supervisor Review'), ('hod_review', 'HOD Review'), ('admin_review', 'Admin Review'), ('completed', 'Completed')], default='initiated', max_length=50)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department')),
            ],
        ),
        migrations.CreateModel(
            name='JobDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_task', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('overall_assessment_of_performance', models.TextField(blank=True, db_index=True, null=True)),
                ('appraisal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_descriptions', to='app.appraisal')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingCourseSeminars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_program_type', models.TextField(blank=True, db_index=True, null=True)),
                ('training_location', models.TextField(blank=True, db_index=True, null=True)),
                ('training_from_date', models.DateField(blank=True, db_index=True, null=True)),
                ('training_to_date', models.DateField(blank=True, db_index=True, null=True)),
                ('appraisal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_course_seminars', to='app.appraisal')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.department')),
            ],
        ),
        migrations.AddField(
            model_name='appraisal',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.unit'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.unit'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='usertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.usertype'),
        ),
    ]
